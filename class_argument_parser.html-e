<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>MyLibrary: ArgumentParser Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">MyLibrary
   </div>
   <div id="projectbrief">自作ライブラリ集</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.html"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="functions.html"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ArgumentParser Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="argument_parser_8hh_source.html">ArgumentParser.hh</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a760403f063ce0bc16b35c7f5d4e84c04"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_argument_parser.html#a760403f063ce0bc16b35c7f5d4e84c04">ArgumentParser</a> (int argc, char *argv[])</td></tr>
<tr class="separator:a760403f063ce0bc16b35c7f5d4e84c04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f72ae9d67e16bd0112768e0cc663d27"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_argument_parser.html#a6f72ae9d67e16bd0112768e0cc663d27">GetArgument</a> (string type)</td></tr>
<tr class="separator:a6f72ae9d67e16bd0112768e0cc663d27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77909ac817227a6d48dfd2534d9aeecb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_argument_parser.html#a77909ac817227a6d48dfd2534d9aeecb">GetArgumentNum</a> ()</td></tr>
<tr class="separator:a77909ac817227a6d48dfd2534d9aeecb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a254d90fbc2f2955ca5c8cd5b3f260e5d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_argument_parser.html#a254d90fbc2f2955ca5c8cd5b3f260e5d">IsSpecified</a> (string type)</td></tr>
<tr class="separator:a254d90fbc2f2955ca5c8cd5b3f260e5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06bd47d91384ea1625757fc32e0d2202"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_argument_parser.html#a06bd47d91384ea1625757fc32e0d2202">ShowAll</a> ()</td></tr>
<tr class="separator:a06bd47d91384ea1625757fc32e0d2202"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><dl class="section author"><dt>Author</dt><dd>G.Nukazuka </dd></dl>
<dl class="section date"><dt>Date</dt><dd>2015/02/05</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.html#_todo000001">Todo:</a></b></dt><dd>add explanations </dd></dl>

<p>Definition at line <a class="el" href="argument_parser_8hh_source.html#l00025">25</a> of file <a class="el" href="argument_parser_8hh_source.html">ArgumentParser.hh</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a760403f063ce0bc16b35c7f5d4e84c04"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ArgumentParser::ArgumentParser </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="argument_parser_8cc_source.html#l00004">4</a> of file <a class="el" href="argument_parser_8cc_source.html">ArgumentParser.cc</a>.</p>
<div class="fragment"><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;{</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  <span class="comment">// loop over argv</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i=1; i&lt;argc; i++)</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    {</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;      <span class="keywordtype">string</span> argument = argv[i];</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;      <span class="keywordtype">string</span> type = <span class="stringliteral">&quot;&quot;</span>, state = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;      <span class="comment">// for long version ( ex. --data=&quot;data.dat&quot;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;      <span class="keywordflow">if</span>( argument.find(<span class="stringliteral">&quot;--&quot;</span>) != string::npos )</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    {</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      <span class="comment">// </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      <span class="keywordflow">if</span>( argument.find(<span class="stringliteral">&quot;=&quot;</span>) != string::npos )</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;          long_version( argument, type, state );</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        }</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;          type = argument.substr( 2 , argument.size() -2 );</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;          state = <span class="stringliteral">&quot;NULL&quot;</span>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    }</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <span class="keywordflow">else</span> <span class="keywordflow">if</span>( argument.substr( 0, 1 ) == <span class="stringliteral">&quot;-&quot;</span> )</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="comment">// for short version </span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="comment">// value specified version ( ex. -o output.pdf)</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordflow">if</span> ( i+1 &lt; argc &amp;&amp; ((<span class="keywordtype">string</span>)argv[i+1]).substr(1,1) != <span class="stringliteral">&quot;-&quot;</span> )</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;          type = short_version(argv[i]);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;          state = argv[i+1];</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;          i++;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="comment">// no value mode ( ex. -h )</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;          type = short_version( argv[i] );</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;          state = <span class="stringliteral">&quot;NULL&quot;</span>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      <span class="keywordflow">if</span>( find(vtype_.begin(), vtype_.end(), type ) != vtype_.end() )</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      MergeArgument( type, state );</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      vtype_.push_back( type );</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      varg_.push_back( state );</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a6f72ae9d67e16bd0112768e0cc663d27"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string ArgumentParser::GetArgument </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="argument_parser_8cc_source.html#l00110">110</a> of file <a class="el" href="argument_parser_8cc_source.html">ArgumentParser.cc</a>.</p>
<div class="fragment"><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">int</span> index = GetIndex( type );</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordtype">string</span> arg = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordflow">if</span>( index == -1 )</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    arg = <span class="stringliteral">&quot;NULL&quot;</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    arg = varg_[index];</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordflow">return</span> arg;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a77909ac817227a6d48dfd2534d9aeecb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int ArgumentParser::GetArgumentNum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="argument_parser_8hh_source.html#l00041">41</a> of file <a class="el" href="argument_parser_8hh_source.html">ArgumentParser.hh</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{ <span class="keywordflow">return</span> vtype_.size(); };</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a254d90fbc2f2955ca5c8cd5b3f260e5d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ArgumentParser::IsSpecified </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="argument_parser_8cc_source.html#l00124">124</a> of file <a class="el" href="argument_parser_8cc_source.html">ArgumentParser.cc</a>.</p>
<div class="fragment"><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordtype">int</span> index = GetIndex( type );</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordtype">string</span> arg = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordflow">if</span>( index == -1 )</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    arg = <span class="stringliteral">&quot;NPOS&quot;</span>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    arg = varg_[index];</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="comment">// if </span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="comment">//   - arg != NULL  -&gt; this type was specified. Return &quot;ture&quot;</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="comment">//   - arg == NULL  -&gt; this type was not specified. Return &quot;false&quot;</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordtype">bool</span> rtn = (arg != <span class="stringliteral">&quot;NPOS&quot;</span>) ? <span class="keyword">true</span> : <span class="keyword">false</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="comment">//  cout &lt;&lt; &quot;ArgumentParser::IsSpecified(&quot; &lt;&lt; type &lt;&lt; &quot;) = &quot; &lt;&lt; rtn &lt;&lt; endl;</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordflow">return</span> rtn;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a06bd47d91384ea1625757fc32e0d2202"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ArgumentParser::ShowAll </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="argument_parser_8cc_source.html#l00144">144</a> of file <a class="el" href="argument_parser_8cc_source.html">ArgumentParser.cc</a>.</p>
<div class="fragment"><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  cout &lt;&lt; <span class="stringliteral">&quot;A number of argument : &quot;</span> &lt;&lt; vtype_.size() &lt;&lt; endl;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordflow">for</span>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;vtype_.size(); i++ )</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      cout &lt;&lt; <span class="stringliteral">&quot;No. &quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;       &lt;&lt; vtype_[i] &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span> </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;       &lt;&lt; <span class="stringliteral">&quot;\&quot;&quot;</span> &lt;&lt; varg_[i] &lt;&lt; <span class="stringliteral">&quot;\&quot;&quot;</span> </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;       &lt;&lt; endl;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="comment">//  exit(-1);</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/<a class="el" href="argument_parser_8hh_source.html">ArgumentParser.hh</a></li>
<li>src/<a class="el" href="argument_parser_8cc_source.html">ArgumentParser.cc</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
