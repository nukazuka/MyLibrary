<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>MyLibrary: ArgumentParser Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.1 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li class="current"><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="classes.html"><span>Data&nbsp;Structure&nbsp;Index</span></a></li>
      <li><a href="functions.html"><span>Data&nbsp;Fields</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>ArgumentParser Class Reference</h1><!-- doxytag: class="ArgumentParser" -->
<p><code>#include &lt;<a class="el" href="argument_parser_8hh_source.html">ArgumentParser.hh</a>&gt;</code></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_argument_parser.html#a760403f063ce0bc16b35c7f5d4e84c04">ArgumentParser</a> (int argc, char *argv[])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">string&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_argument_parser.html#a6f72ae9d67e16bd0112768e0cc663d27">GetArgument</a> (string type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_argument_parser.html#a77909ac817227a6d48dfd2534d9aeecb">GetArgumentNum</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_argument_parser.html#a254d90fbc2f2955ca5c8cd5b3f260e5d">IsSpecified</a> (string type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_argument_parser.html#a06bd47d91384ea1625757fc32e0d2202">ShowAll</a> ()</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<dl class="author"><dt><b>Author:</b></dt><dd>G.Nukazuka </dd></dl>
<dl class="date"><dt><b>Date:</b></dt><dd>2015/02/05</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.html#_todo000001">Todo:</a></b></dt><dd>add explanations </dd></dl>

<p>Definition at line <a class="el" href="argument_parser_8hh_source.html#l00025">25</a> of file <a class="el" href="argument_parser_8hh_source.html">ArgumentParser.hh</a>.</p>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a760403f063ce0bc16b35c7f5d4e84c04"></a><!-- doxytag: member="ArgumentParser::ArgumentParser" ref="a760403f063ce0bc16b35c7f5d4e84c04" args="(int argc, char *argv[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ArgumentParser::ArgumentParser </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>argv</em>[]</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="argument_parser_8cc_source.html#l00004">4</a> of file <a class="el" href="argument_parser_8cc_source.html">ArgumentParser.cc</a>.</p>

<p><div class="fragment"><pre class="fragment"><a name="l00005"></a>00005 {
<a name="l00006"></a>00006 
<a name="l00007"></a>00007   <span class="comment">// loop over argv</span>
<a name="l00008"></a>00008   <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i=1; i&lt;argc; i++)
<a name="l00009"></a>00009     {
<a name="l00010"></a>00010 
<a name="l00011"></a>00011       <span class="keywordtype">string</span> argument = argv[i];
<a name="l00012"></a>00012       <span class="keywordtype">string</span> type = <span class="stringliteral">&quot;&quot;</span>, state = <span class="stringliteral">&quot;&quot;</span>;
<a name="l00013"></a>00013 
<a name="l00014"></a>00014       <span class="comment">// for long version ( ex. --data=&quot;data.dat&quot;</span>
<a name="l00015"></a>00015       <span class="keywordflow">if</span>( argument.find(<span class="stringliteral">&quot;--&quot;</span>) != string::npos )
<a name="l00016"></a>00016     {
<a name="l00017"></a>00017 
<a name="l00018"></a>00018       <span class="comment">// </span>
<a name="l00019"></a>00019       <span class="keywordflow">if</span>( argument.find(<span class="stringliteral">&quot;=&quot;</span>) != string::npos )
<a name="l00020"></a>00020         {
<a name="l00021"></a>00021 
<a name="l00022"></a>00022           long_version( argument, type, state );
<a name="l00023"></a>00023         }
<a name="l00024"></a>00024       <span class="keywordflow">else</span>
<a name="l00025"></a>00025         {
<a name="l00026"></a>00026 
<a name="l00027"></a>00027           type = argument.substr( 2 , argument.size() -2 );
<a name="l00028"></a>00028           state = <span class="stringliteral">&quot;NULL&quot;</span>;
<a name="l00029"></a>00029         }
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 
<a name="l00032"></a>00032     }
<a name="l00033"></a>00033       <span class="keywordflow">else</span> <span class="keywordflow">if</span>( argument.substr( 0, 1 ) == <span class="stringliteral">&quot;-&quot;</span> )
<a name="l00034"></a>00034     {
<a name="l00035"></a>00035 
<a name="l00036"></a>00036       <span class="comment">// for short version </span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038       <span class="comment">// value specified version ( ex. -o output.pdf)</span>
<a name="l00039"></a>00039       <span class="keywordflow">if</span> ( i+1 &lt; argc &amp;&amp; ((<span class="keywordtype">string</span>)argv[i+1]).substr(1,1) != <span class="stringliteral">&quot;-&quot;</span> )
<a name="l00040"></a>00040         {
<a name="l00041"></a>00041 
<a name="l00042"></a>00042           type = short_version(argv[i]);
<a name="l00043"></a>00043           state = argv[i+1];
<a name="l00044"></a>00044           i++;
<a name="l00045"></a>00045         }
<a name="l00046"></a>00046       <span class="comment">// no value mode ( ex. -h )</span>
<a name="l00047"></a>00047       <span class="keywordflow">else</span>
<a name="l00048"></a>00048         {
<a name="l00049"></a>00049 
<a name="l00050"></a>00050           type = short_version( argv[i] );
<a name="l00051"></a>00051           state = <span class="stringliteral">&quot;NULL&quot;</span>;
<a name="l00052"></a>00052         }
<a name="l00053"></a>00053     }
<a name="l00054"></a>00054       
<a name="l00055"></a>00055       <span class="keywordflow">if</span>( find(vtype_.begin(), vtype_.end(), type ) != vtype_.end() )
<a name="l00056"></a>00056     {
<a name="l00057"></a>00057       MergeArgument( type, state );
<a name="l00058"></a>00058     }
<a name="l00059"></a>00059       <span class="keywordflow">else</span>
<a name="l00060"></a>00060     {
<a name="l00061"></a>00061       vtype_.push_back( type );
<a name="l00062"></a>00062       varg_.push_back( state );
<a name="l00063"></a>00063     }
<a name="l00064"></a>00064     }
<a name="l00065"></a>00065 
<a name="l00066"></a>00066 }
</pre></div></p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a6f72ae9d67e16bd0112768e0cc663d27"></a><!-- doxytag: member="ArgumentParser::GetArgument" ref="a6f72ae9d67e16bd0112768e0cc663d27" args="(string type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string ArgumentParser::GetArgument </td>
          <td>(</td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>type</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="argument_parser_8cc_source.html#l00110">110</a> of file <a class="el" href="argument_parser_8cc_source.html">ArgumentParser.cc</a>.</p>

<p><div class="fragment"><pre class="fragment"><a name="l00111"></a>00111 {
<a name="l00112"></a>00112   
<a name="l00113"></a>00113   <span class="keywordtype">int</span> index = GetIndex( type );
<a name="l00114"></a>00114   <span class="keywordtype">string</span> arg = <span class="stringliteral">&quot;&quot;</span>;
<a name="l00115"></a>00115 
<a name="l00116"></a>00116   <span class="keywordflow">if</span>( index == -1 )
<a name="l00117"></a>00117     arg = <span class="stringliteral">&quot;NULL&quot;</span>;
<a name="l00118"></a>00118   <span class="keywordflow">else</span>
<a name="l00119"></a>00119     arg = varg_[index];
<a name="l00120"></a>00120 
<a name="l00121"></a>00121   <span class="keywordflow">return</span> arg;
<a name="l00122"></a>00122 }
</pre></div></p>

</div>
</div>
<a class="anchor" id="a77909ac817227a6d48dfd2534d9aeecb"></a><!-- doxytag: member="ArgumentParser::GetArgumentNum" ref="a77909ac817227a6d48dfd2534d9aeecb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ArgumentParser::GetArgumentNum </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="argument_parser_8hh_source.html#l00041">41</a> of file <a class="el" href="argument_parser_8hh_source.html">ArgumentParser.hh</a>.</p>

<p><div class="fragment"><pre class="fragment"><a name="l00041"></a>00041 { <span class="keywordflow">return</span> vtype_.size(); };
</pre></div></p>

</div>
</div>
<a class="anchor" id="a254d90fbc2f2955ca5c8cd5b3f260e5d"></a><!-- doxytag: member="ArgumentParser::IsSpecified" ref="a254d90fbc2f2955ca5c8cd5b3f260e5d" args="(string type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ArgumentParser::IsSpecified </td>
          <td>(</td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>type</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="argument_parser_8cc_source.html#l00124">124</a> of file <a class="el" href="argument_parser_8cc_source.html">ArgumentParser.cc</a>.</p>

<p><div class="fragment"><pre class="fragment"><a name="l00125"></a>00125 {
<a name="l00126"></a>00126 
<a name="l00127"></a>00127   <span class="keywordtype">int</span> index = GetIndex( type );
<a name="l00128"></a>00128   <span class="keywordtype">string</span> arg = <span class="stringliteral">&quot;&quot;</span>;
<a name="l00129"></a>00129 
<a name="l00130"></a>00130   <span class="keywordflow">if</span>( index == -1 )
<a name="l00131"></a>00131     arg = <span class="stringliteral">&quot;NPOS&quot;</span>;
<a name="l00132"></a>00132   <span class="keywordflow">else</span>
<a name="l00133"></a>00133     arg = varg_[index];
<a name="l00134"></a>00134 
<a name="l00135"></a>00135   <span class="comment">// if </span>
<a name="l00136"></a>00136   <span class="comment">//   - arg != NULL  -&gt; this type was specified. Return &quot;ture&quot;</span>
<a name="l00137"></a>00137   <span class="comment">//   - arg == NULL  -&gt; this type was not specified. Return &quot;false&quot;</span>
<a name="l00138"></a>00138   <span class="keywordtype">bool</span> rtn = (arg != <span class="stringliteral">&quot;NPOS&quot;</span>) ? <span class="keyword">true</span> : <span class="keyword">false</span>;
<a name="l00139"></a>00139   <span class="comment">//  cout &lt;&lt; &quot;ArgumentParser::IsSpecified(&quot; &lt;&lt; type &lt;&lt; &quot;) = &quot; &lt;&lt; rtn &lt;&lt; endl;</span>
<a name="l00140"></a>00140 
<a name="l00141"></a>00141   <span class="keywordflow">return</span> rtn;
<a name="l00142"></a>00142 }
</pre></div></p>

</div>
</div>
<a class="anchor" id="a06bd47d91384ea1625757fc32e0d2202"></a><!-- doxytag: member="ArgumentParser::ShowAll" ref="a06bd47d91384ea1625757fc32e0d2202" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ArgumentParser::ShowAll </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="argument_parser_8cc_source.html#l00144">144</a> of file <a class="el" href="argument_parser_8cc_source.html">ArgumentParser.cc</a>.</p>

<p><div class="fragment"><pre class="fragment"><a name="l00145"></a>00145 {
<a name="l00146"></a>00146 
<a name="l00147"></a>00147   cout &lt;&lt; <span class="stringliteral">&quot;A number of argument : &quot;</span> &lt;&lt; vtype_.size() &lt;&lt; endl;
<a name="l00148"></a>00148   
<a name="l00149"></a>00149   <span class="keywordflow">for</span>( <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;vtype_.size(); i++ )
<a name="l00150"></a>00150     {
<a name="l00151"></a>00151 
<a name="l00152"></a>00152       cout &lt;&lt; <span class="stringliteral">&quot;No. &quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span>
<a name="l00153"></a>00153        &lt;&lt; vtype_[i] &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span> 
<a name="l00154"></a>00154        &lt;&lt; <span class="stringliteral">&quot;\&quot;&quot;</span> &lt;&lt; varg_[i] &lt;&lt; <span class="stringliteral">&quot;\&quot;&quot;</span> 
<a name="l00155"></a>00155        &lt;&lt; endl;
<a name="l00156"></a>00156     }
<a name="l00157"></a>00157   <span class="comment">//  exit(-1);</span>
<a name="l00158"></a>00158 }
</pre></div></p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/<a class="el" href="argument_parser_8hh_source.html">ArgumentParser.hh</a></li>
<li>src/<a class="el" href="argument_parser_8cc_source.html">ArgumentParser.cc</a></li>
</ul>
</div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Functions</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr size="1"/><address style="text-align: right;"><small>Generated on 5 Feb 2016 for MyLibrary by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>
